{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"role":"symbol","title":"..(_:_:)","roleHeading":"Operator","modules":[{"name":"CasePaths"}],"symbolKind":"op","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".."},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"AppendedValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?, ("},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":"?"}],"externalID":"s:9CasePaths2zzoiyq0_Sgxcq_Sgxc_q_q0_ctr1_lF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".."},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"AppendedValue"},{"kind":"text","text":">("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"text":"Root","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"A new extract function from the first extract function’s root to the second embed","type":"text"},{"text":" ","type":"text"},{"text":"function’s appended value.","type":"text"}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An extract function from a root to a value."}]}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"An embed function from some other appended value to the extract function’s value.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful when composing extract functions together."}]},{"type":"codeListing","syntax":"swift","code":["[Result<Int?, Error>.success(.some(42)), .success(nil), .failure(MyError())]","  .compactMap(\/Result.success..Optional.some)","\/\/ [42]"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/..(_:_:)"},"variants":[{"paths":["\/documentation\/casepaths\/'..(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns a new extract function by appending the given extract function with an embed function.","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/CasePaths/..(_:_:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"AppendedValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"text":"?, (","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"..(_:_:)","abstract":[{"text":"Returns a new extract function by appending the given extract function with an embed function.","type":"text"}],"type":"topic","url":"\/documentation\/casepaths\/'..(_:_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/..(_:_:)"},"doc://co.pointfree.Parsing/documentation/CasePaths":{"role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","type":"topic","title":"CasePaths","url":"\/documentation\/casepaths","abstract":[],"kind":"symbol"}}}