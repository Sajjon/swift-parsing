{"sections":[],"metadata":{"modules":[{"name":"Parsing"}],"role":"collectionGroup","title":"Conversion Implementations"},"variants":[{"paths":["\/documentation\/parsing\/anyconversion\/conversion-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/data-3otsh","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/data-4wywp","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/double","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/int","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/string-50wfm","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/string-70sob","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/substring-5uao2","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/substring-gubc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/utf8"],"generated":true,"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/json(_:decoder:encoder:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/lossless(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/map(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/representing(_:)"],"generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/case(_:)-3kuct","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/case(_:)-8w7uv","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/convert(apply:unapply:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/memberwise(_:)"],"generated":true,"title":"Type Methods"}],"kind":"article","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/Conversion-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/map(_:)":{"type":"topic","title":"map(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/map(_:)","role":"symbol","url":"\/documentation\/parsing\/anyconversion\/map(_:)","abstract":[{"text":"Returns a conversion that transforms the output of this conversion with a given downstream","type":"text"},{"text":" ","type":"text"},{"text":"conversion.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/substring-5uao2":{"url":"\/documentation\/parsing\/anyconversion\/substring-5uao2","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/substring-5uao2","title":"substring","abstract":[{"type":"text","text":"Transforms this conversion to "},{"code":"Substring.UnicodeScalarView","type":"codeVoice"},{"type":"text","text":" into a conversion to "},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"substring"},{"kind":"text","text":": "},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeScalarViewToSubstring","preciseIdentifier":"s:7Parsing11ConversionsO28UnicodeScalarViewToSubstringV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/string-50wfm":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"BytesToString","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO13BytesToStringV"},{"text":"<","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"text":"UTF8View","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV"},{"text":">>","kind":"text"}],"abstract":[{"text":"Transforms this conversion to ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":" into a conversion to ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/anyconversion\/string-50wfm","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/string-50wfm","title":"string","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/substring-gubc":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/substring-gubc","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/parsing\/anyconversion\/substring-gubc","title":"substring","abstract":[{"text":"Transforms this conversion to ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":" into a conversion to "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"substring","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO19UTF8ViewToSubstringV","text":"UTF8ViewToSubstring","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/string-70sob":{"url":"\/documentation\/parsing\/anyconversion\/string-70sob","abstract":[{"text":"Transforms this conversion to ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":" into a conversion to ","type":"text"},{"type":"codeVoice","code":"String"},{"text":".","type":"text"}],"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/string-70sob","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"SubstringToString","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV"},{"text":">","kind":"text"}],"title":"string","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/double":{"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","title":"double","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"double","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/anyconversion\/double","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/double","abstract":[{"type":"text","text":"Transforms this conversion to "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" into a conversion to "},{"type":"codeVoice","code":"Double"},{"type":"text","text":"."}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/lossless(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lossless","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"FromLosslessString","preciseIdentifier":"s:7Parsing11ConversionsO18FromLosslessStringV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/lossless(_:)","url":"\/documentation\/parsing\/anyconversion\/lossless(_:)","abstract":[{"text":"Transforms this conversion to a string into a conversion to the given lossless","type":"text"},{"text":" ","type":"text"},{"text":"string-convertible type.","type":"text"}],"type":"topic","title":"lossless(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/case(_:)-3kuct":{"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/case(_:)-3kuct","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"case(_:)","abstract":[],"url":"\/documentation\/parsing\/anyconversion\/case(_:)-3kuct"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/representing(_:)":{"title":"representing(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/representing(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"representing","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"text":"FromRawValue","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO12FromRawValueV"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"url":"\/documentation\/parsing\/anyconversion\/representing(_:)","abstract":[{"text":"Transforms this conversion to a raw value into a conversion to the given raw representable","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/memberwise(_:)":{"abstract":[{"text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a","type":"text"},{"text":" ","type":"text"},{"text":"memberwise initializer.","type":"text"}],"type":"topic","url":"\/documentation\/parsing\/anyconversion\/memberwise(_:)","kind":"symbol","role":"symbol","title":"memberwise(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/memberwise(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"memberwise"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Struct"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Struct"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/utf8":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/utf8","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}]},"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"utf8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO19SubstringToUTF8ViewV","text":"SubstringToUTF8View","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/parsing\/anyconversion\/utf8","abstract":[{"type":"text","text":"Transforms this conversion to "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" into a conversion to "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"title":"utf8"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/case(_:)-8w7uv":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/case(_:)-8w7uv","title":"case(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"text":" ","type":"text"},{"text":"associated values.","type":"text"}],"role":"symbol","url":"\/documentation\/parsing\/anyconversion\/case(_:)-8w7uv","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">(("},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyConversion"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyConversion"}],"url":"\/documentation\/parsing\/anyconversion","abstract":[{"type":"text","text":"A type-erased "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","type":"reference"},{"type":"text","text":"."}],"role":"symbol","title":"AnyConversion","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/data-3otsh":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"BytesToData","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":">>>","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/data-3otsh","role":"symbol","title":"data","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"Transforms this conversion to "},{"type":"codeVoice","code":"ArraySlice<UInt8>"},{"type":"text","text":" into a conversion to "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/anyconversion\/data-3otsh"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/convert(apply:unapply:)":{"title":"convert(apply:unapply:)","type":"topic","url":"\/documentation\/parsing\/anyconversion\/convert(apply:unapply:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/convert(apply:unapply:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convert"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"text":">(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/data-4wywp":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"data","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"BytesToData","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV"},{"text":">>","kind":"text"}],"url":"\/documentation\/parsing\/anyconversion\/data-4wywp","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/data-4wywp","role":"symbol","abstract":[{"text":"Transforms this conversion to ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":" into a conversion to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","title":"data","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value back into an "},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Conversion"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/int":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/int","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"int"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV","text":"BinaryFloatingPointToFixedWidthInteger"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"url":"\/documentation\/parsing\/anyconversion\/int","title":"int","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"text":"Transforms this conversion to ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" into a conversion to ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/json(_:decoder:encoder:)":{"title":"json(_:decoder:encoder:)","url":"\/documentation\/parsing\/anyconversion\/json(_:decoder:encoder:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/json(_:decoder:encoder:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Transforms this conversion to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" into a conversion to the given codable type.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"json","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"JSON","preciseIdentifier":"s:7Parsing11ConversionsO4JSONV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">>","kind":"text"}]}}}