{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"metadata":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"externalID":"s:7Parsing7ParsersO","title":"Parsers","modules":[{"name":"Parsing"}],"symbolKind":"enum","role":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"roleHeading":"Enumeration"},"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Identity","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OverridePrinting","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/TryPrint","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional"],"title":"Enumerations"}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/parsing\/parsers"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"The various operators defined as extensions on ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"text":" implement their functionality as","type":"text"},{"text":" ","type":"text"},{"text":"classes or structures that extend this enumeration. For example, the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5"},{"text":" ","type":"text"},{"text":"operator returns a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map"},{"text":" parser.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Whitespace":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace","kind":"symbol","role":"symbol","abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Whitespace"}],"title":"Parsers.Whitespace","url":"\/documentation\/parsing\/parsers\/whitespace"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","abstract":[{"text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate.","type":"text"}],"title":"Parsers.Filter","url":"\/documentation\/parsing\/parsers\/filter","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"}],"navigatorTitle":[{"text":"Filter","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","navigatorTitle":[{"kind":"identifier","text":"IntParser"}],"url":"\/documentation\/parsing\/parsers\/intparser","role":"symbol","title":"Parsers.IntParser","abstract":[{"type":"text","text":"A parser that consumes an integer (with an optional leading "},{"code":"+","type":"codeVoice"},{"type":"text","text":" or "},{"code":"-","type":"codeVoice"},{"type":"text","text":" sign for signed integer"},{"type":"text","text":" "},{"type":"text","text":"types) from the beginning of a collection of UTF8 code units."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Print":{"url":"\/documentation\/parsing\/parsers\/print","navigatorTitle":[{"kind":"identifier","text":"Print"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","kind":"symbol","role":"symbol","abstract":[],"title":"Parsers.Print","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Print"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConstant":{"abstract":[{"text":"A parser that replaces another parserâ€™s ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" output with some new output.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","kind":"symbol","title":"Parsers.MapConstant","url":"\/documentation\/parsing\/parsers\/mapconstant","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapConstant"}],"navigatorTitle":[{"kind":"identifier","text":"MapConstant"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConversion":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","role":"symbol","navigatorTitle":[{"text":"MapConversion","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapConversion","kind":"identifier"}],"abstract":[{"text":"A parser that transforms the output of another parser with a given conversion.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/mapconversion","kind":"symbol","title":"Parsers.MapConversion"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Skip":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"title":"Parsers.Skip","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","role":"symbol","navigatorTitle":[{"text":"Skip","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/skip"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/StartsWith":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"title":"Parsers.StartsWith","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","role":"symbol","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/startswith"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany":{"url":"\/documentation\/parsing\/parsers\/oneofmany","type":"topic","title":"Parsers.OneOfMany","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","role":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"}],"navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Rest":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"title":"Parsers.Rest","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","role":"symbol","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/rest"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/AnyParser":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"title":"Parsers.AnyParser","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","role":"symbol","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/anyparser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","type":"topic","title":"Parsers.FloatParser","abstract":[{"text":"A parser that consumes a floating-point number from the beginning of a collection of UTF-8","type":"text"},{"text":" ","type":"text"},{"text":"code units.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/floatparser","role":"symbol","navigatorTitle":[{"text":"FloatParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/First":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"title":"Parsers.First","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","role":"symbol","navigatorTitle":[{"text":"First","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/first"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Many":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"title":"Parsers.Many","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","role":"symbol","navigatorTitle":[{"text":"Many","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/many"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Fail":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"title":"Parsers.Fail","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","role":"symbol","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/fail"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pullback"}],"abstract":[{"type":"text","text":"Transforms the "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" of a downstream parser."}],"title":"Parsers.Pullback","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Pullback"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","kind":"symbol","url":"\/documentation\/parsing\/parsers\/pullback"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/End":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"title":"Parsers.End","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","role":"symbol","navigatorTitle":[{"text":"End","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/end"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CompactMap","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","title":"Parsers.CompactMap","kind":"symbol","navigatorTitle":[{"text":"CompactMap","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given transformation with the output"},{"type":"text","text":" "},{"type":"text","text":"of its upstream parser."}],"url":"\/documentation\/parsing\/parsers\/compactmap","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"role":"symbol","url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"title":"Parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseIterableRawRepresentableParser","kind":"identifier"}],"navigatorTitle":[{"text":"CaseIterableRawRepresentableParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser","role":"symbol","title":"Parsers.CaseIterableRawRepresentableParser","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/optionalvoid","role":"symbol","navigatorTitle":[{"text":"OptionalVoid","kind":"identifier"}],"kind":"symbol","title":"Parsers.OptionalVoid","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-4hsj5":{"url":"\/documentation\/parsing\/parser\/map(_:)-4hsj5","type":"topic","title":"map(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","role":"symbol","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Map","preciseIdentifier":"s:7Parsing7ParsersO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixThrough":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}],"title":"Parsers.PrefixThrough","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","role":"symbol","navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/prefixthrough"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Lazy":{"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/parsers\/lazy","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","title":"Parsers.Lazy","navigatorTitle":[{"kind":"identifier","text":"Lazy"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PipeEnd":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PipeEnd"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/pipeend","navigatorTitle":[{"kind":"identifier","text":"PipeEnd"}],"abstract":[],"title":"Parsers.PipeEnd"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BoolParser","kind":"identifier"}],"navigatorTitle":[{"text":"BoolParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/boolparser","role":"symbol","title":"Parsers.BoolParser","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixUpTo":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"title":"Parsers.PrefixUpTo","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","role":"symbol","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/prefixupto"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError":{"url":"\/documentation\/parsing\/parsers\/replaceerror","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","navigatorTitle":[{"kind":"identifier","text":"ReplaceError"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceError"}],"title":"Parsers.ReplaceError","type":"topic","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"navigatorTitle":[{"kind":"identifier","text":"FlatMap"}],"abstract":[{"type":"text","text":"A parser that transforms the output of another parser into a new parser."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlatMap"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","kind":"symbol","title":"Parsers.FlatMap","role":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/flatmap"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"title":"Parsers.Stream","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","role":"symbol","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","title":"Parsers.Map","abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given closure."}],"navigatorTitle":[{"kind":"identifier","text":"Map"}],"url":"\/documentation\/parsing\/parsers\/map","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Prefix":{"abstract":[],"url":"\/documentation\/parsing\/parsers\/prefix","role":"symbol","title":"Parsers.Prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/pipe","navigatorTitle":[{"kind":"identifier","text":"Pipe"}],"abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}],"title":"Parsers.Pipe"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Always":{"abstract":[],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}],"title":"Parsers.Always","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","role":"symbol","navigatorTitle":[{"text":"Always","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/always"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Identity":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Identity","navigatorTitle":[{"kind":"identifier","text":"Identity"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/identity","title":"Parsers.Identity","abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Identity"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OverridePrinting":{"url":"\/documentation\/parsing\/parsers\/overrideprinting","type":"topic","title":"Parsers.OverridePrinting","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OverridePrinting","role":"symbol","abstract":[{"type":"text","text":"A parser-printer that parses with the given parser and prints with the given parser-printer."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OverridePrinting"}],"navigatorTitle":[{"kind":"identifier","text":"OverridePrinting"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Newline":{"abstract":[],"deprecated":true,"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"title":"Parsers.Newline","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","role":"symbol","navigatorTitle":[{"text":"Newline","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/newline"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/TryPrint":{"url":"\/documentation\/parsing\/parsers\/tryprint","type":"topic","title":"Parsers.TryPrint","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/TryPrint","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TryPrint"}],"navigatorTitle":[{"kind":"identifier","text":"TryPrint"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"url":"\/documentation\/parsing\/parsers\/conditional","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","title":"Parsers.Conditional","navigatorTitle":[{"kind":"identifier","text":"Conditional"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"type":"topic","abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"url":"\/documentation\/parsing\/parsers\/uuidparser","type":"topic","title":"Parsers.UUIDParser","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UUIDParser"}],"navigatorTitle":[{"kind":"identifier","text":"UUIDParser"}]}}}