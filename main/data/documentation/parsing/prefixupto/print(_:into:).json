{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print(_:into:)"},"kind":"symbol","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/prefixupto\/print(_:into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Parsing"}],"symbolKind":"method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"type":"text","text":"."}]},"externalID":"s:7Parsing10PrefixUpToVA2A21PrependableCollectionRzrlE5print_4intoyx_xztKF","extendedModule":"Parsing","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"print(_:into:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"items":[{"content":[{"inlineContent":[{"text":"Parameters","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"output: A well-structured value to be printed to the given input."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"input: A nebulous, mutable piece of data to be incrementally printed into."}]}]}]}]}],"type":"unorderedList"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/print(_:into:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print(_:into:)","url":"\/documentation\/parsing\/prefixupto\/print(_:into:)","type":"topic","role":"symbol","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"title":"PrefixUpTo","url":"\/documentation\/parsing\/prefixupto","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/prefixupto\/parserprinter-implementations","title":"ParserPrinter Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations","type":"topic","abstract":[],"role":"collectionGroup"}}}