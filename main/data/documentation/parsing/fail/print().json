{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/print()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fail\/print()"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/ParserPrinter-Implementations"]]},"abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A nebulous value.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"extendedModule":"Parsing","role":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"externalID":"s:7Parsing13ParserPrinterPA2A19_EmptyInitializable5InputRpzyt6OutputRtzrlE5printAFyKF::SYNTHESIZED::s:7Parsing4FailV","title":"print()","roleHeading":"Instance Method","modules":[{"name":"Parsing"}],"symbolKind":"method"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"navigatorTitle":[{"text":"Fail","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"title":"Fail","url":"\/documentation\/parsing\/fail","abstract":[{"type":"text","text":"A parser that always fails, no matter the input."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/print()":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/print()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"type":"topic","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"print()","abstract":[{"type":"text","text":"Attempts to print a nebulous piece of data."}],"url":"\/documentation\/parsing\/fail\/print()","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/ParserPrinter-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","kind":"article","title":"ParserPrinter Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/fail\/parserprinter-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"title":"Parser"}}}