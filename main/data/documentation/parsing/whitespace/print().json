{"sections":[],"abstract":[{"type":"text","text":"Attempts to print a nebulous piece of data."}],"metadata":{"modules":[{"name":"Parsing"}],"symbolKind":"method","title":"print()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"externalID":"s:7Parsing13ParserPrinterPA2A19_EmptyInitializable5InputRpzyt6OutputRtzrlE5printAFyKF::SYNTHESIZED::s:7Parsing10WhitespaceV","extendedModule":"Parsing","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/ParserPrinter-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/print()","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/parsing\/whitespace\/print()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A nebulous value."}]}],"kind":"content"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/ParserPrinter-Implementations":{"abstract":[],"title":"ParserPrinter Implementations","url":"\/documentation\/parsing\/whitespace\/parserprinter-implementations","kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/ParserPrinter-Implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/print()":{"abstract":[{"type":"text","text":"Attempts to print a nebulous piece of data."}],"title":"print()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/whitespace\/print()","kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/print()","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}],"title":"Whitespace","url":"\/documentation\/parsing\/whitespace","abstract":[{"type":"text","text":"A parser that consumes whitespace from the beginning of input."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"title":"Parser"}}}