{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/whitespace\/init(_:_:)-2i1mj"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"length","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Length","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"configuration","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Whitespace","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing10WhitespaceV"},{"text":"<","kind":"text"},{"text":"Length","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Configuration","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing10WhitespaceV13ConfigurationO"},{"text":" = .all)","kind":"text"}]}]}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Parsing10WhitespaceV","kind":"typeIdentifier","text":"Whitespace"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":">."},{"preciseIdentifier":"s:7Parsing10WhitespaceV13ConfigurationO","kind":"typeIdentifier","text":"Configuration"},{"kind":"text","text":")"}],"title":"init(_:_:)","extendedModule":"Parsing","roleHeading":"Initializer","externalID":"s:7Parsing10WhitespaceVA2A11ConversionsO8IdentityVy_Ss8UTF8ViewVGRs_rlEyACyxAJGx_AC13ConfigurationOyxAJ_Gtcfc","symbolKind":"init","role":"symbol","modules":[{"name":"Parsing"}],"conformance":{"constraints":[{"code":"Length","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"CountingRange","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"InputToBytes","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.Identity<Substring.UTF8View>"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init(_:_:)-2i1mj","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/init(_:_:)-2i1mj":{"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Length"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"CountingRange"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"InputToBytes"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.Identity<Substring.UTF8View>"},{"text":".","type":"text"}]},"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Whitespace","preciseIdentifier":"s:7Parsing10WhitespaceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing10WhitespaceV13ConfigurationO","text":"Configuration"},{"kind":"text","text":")"}],"type":"topic","abstract":[],"url":"\/documentation\/parsing\/whitespace\/init(_:_:)-2i1mj","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init(_:_:)-2i1mj","title":"init(_:_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/Configuration-swift.enum":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Configuration"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Configuration"}],"url":"\/documentation\/parsing\/whitespace\/configuration-swift.enum","title":"Whitespace.Configuration","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}],"title":"Whitespace","url":"\/documentation\/parsing\/whitespace","abstract":[{"type":"text","text":"A parser that consumes whitespace from the beginning of input."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"title":"Parser"}}}