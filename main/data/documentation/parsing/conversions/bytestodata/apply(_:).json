{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData"]]},"abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/bytestodata\/apply(_:)"]}],"metadata":{"modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"}],"role":"symbol","title":"apply(_:)","roleHeading":"Instance Method","externalID":"s:7Parsing11ConversionsO11BytesToDataV5applyy10Foundation0E0VxF","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A transformed output value.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"input","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An input value."}]}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)"},{"type":"text","text":" for the reverse process."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/apply(_:)"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"title":"Conversions","navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"type":"topic","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","url":"\/documentation\/parsing\/conversions","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData":{"role":"symbol","url":"\/documentation\/parsing\/conversions\/bytestodata","kind":"symbol","navigatorTitle":[{"text":"BytesToData","kind":"identifier"}],"abstract":[{"text":"A conversion from a ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","isActive":true},{"text":" of UTF-8 bytes to ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":".","type":"text"}],"type":"topic","title":"Conversions.BytesToData","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BytesToData","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/apply(_:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/apply(_:)","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"kind":"symbol","title":"apply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/conversions\/bytestodata\/apply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/PrependableCollection":{"role":"symbol","url":"\/documentation\/parsing\/prependablecollection","kind":"symbol","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}],"type":"topic","title":"PrependableCollection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"title":"apply(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","url":"\/documentation\/parsing\/conversion\/apply(_:)","role":"symbol","kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}]}}}