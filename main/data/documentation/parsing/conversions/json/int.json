{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"int","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger","text":"BinaryFloatingPointToFixedWidthInteger","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"A fluent version of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property"},{"text":". Equivalent to calling ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/map(_:)"},{"text":" ","type":"text"},{"text":"with ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["doubleConversion.int","\/\/ =","doubleConversion.map(.int)"]}]}],"abstract":[{"text":"Transforms this conversion to ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" into a conversion to ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/int","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/Conversion-Implementations"]]},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/json\/int"]}],"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"int"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BinaryFloatingPointToFixedWidthInteger","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">>"}],"extendedModule":"Parsing","role":"symbol","conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"externalID":"s:7Parsing10ConversionPAASd6OutputRtzrlE3intAA11ConversionsO3MapVy_xAH38BinaryFloatingPointToFixedWidthIntegerVy_SdSiGGvp::SYNTHESIZED::s:7Parsing11ConversionsO4JSONV","title":"int","roleHeading":"Instance Property","modules":[{"name":"Parsing"}],"symbolKind":"property"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Map":{"title":"Conversions.Map","navigatorTitle":[{"kind":"identifier","text":"Map"}],"type":"topic","abstract":[{"type":"text","text":"A conversion that composes two conversions together by composing their"},{"type":"text","text":" "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","type":"reference","isActive":true},{"type":"text","text":" functions and "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","type":"reference","isActive":true},{"type":"text","text":" functions together."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","url":"\/documentation\/parsing\/conversions\/map","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/JSON/Conversion-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/Conversion-Implementations","type":"topic","url":"\/documentation\/parsing\/conversions\/json\/conversion-implementations","abstract":[],"title":"Conversion Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/unapply(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","required":true,"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/parsing\/conversion\/unapply(_:)","abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"title":"unapply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/JSON/map(_:)":{"url":"\/documentation\/parsing\/conversions\/json\/map(_:)","type":"topic","role":"symbol","title":"map(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/map(_:)","abstract":[{"text":"Returns a conversion that transforms the output of this conversion with a given downstream","type":"text"},{"text":" ","type":"text"},{"text":"conversion.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"text":") -> ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"title":"apply(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","url":"\/documentation\/parsing\/conversion\/apply(_:)","role":"symbol","kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BinaryFloatingPointToFixedWidthInteger":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BinaryFloatingPointToFixedWidthInteger","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/conversions\/binaryfloatingpointtofixedwidthinteger","navigatorTitle":[{"text":"BinaryFloatingPointToFixedWidthInteger","kind":"identifier"}],"abstract":[{"text":"A conversion from a ","type":"text"},{"type":"codeVoice","code":"Double"},{"text":" to an ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":".","type":"text"}],"title":"Conversions.BinaryFloatingPointToFixedWidthInteger"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"title":"Conversions","navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"type":"topic","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","url":"\/documentation\/parsing\/conversions","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/JSON/int":{"url":"\/documentation\/parsing\/conversions\/json\/int","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"int"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"text":"BinaryFloatingPointToFixedWidthInteger","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">>","kind":"text"}],"abstract":[{"text":"Transforms this conversion to ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" into a conversion to ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON\/int","title":"int","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/int-swift.type.property":{"title":"int","type":"topic","abstract":[{"type":"text","text":"A conversion from a "},{"code":"Double","type":"codeVoice"},{"type":"text","text":" to an "},{"code":"Int","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.BinaryFloatingPointToFixedWidthInteger<Double, Int>"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/parsing\/conversion\/int-swift.type.property","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"int"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BinaryFloatingPointToFixedWidthInteger","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/JSON":{"navigatorTitle":[{"kind":"identifier","text":"JSON"}],"title":"Conversions.JSON","url":"\/documentation\/parsing\/conversions\/json","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"abstract":[{"type":"text","text":"A conversion from "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" to some codable type."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/JSON","type":"topic"}}}