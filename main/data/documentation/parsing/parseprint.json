{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ParserPrinters"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing13ParserPrinterP","text":"ParserPrinter"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Although you can build printers with the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","isActive":true},{"type":"text","text":" entry point, as long as everything in the"},{"type":"text","text":" "},{"type":"text","text":"builder context is a printer, it doesn’t proper connote its intentions. By using "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","isActive":true},{"type":"text","text":" "},{"type":"text","text":"you can make your intentions clearer:"}]},{"type":"codeListing","code":["let welcoming = ParsePrint {","  \"Hello \"","  Int.parser()","  \"!\"","}","","try welcoming.parse(\"Hello 42!\") \/\/ 42","try welcoming.print(1729) \/\/ \"Hello 1729\""],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","type":"reference","isActive":true},{"text":" entry point can also help you catch errors earlier if you accidentally use","type":"text"},{"text":" ","type":"text"},{"text":"an operator that is not printer-friendly:","type":"text"}]},{"type":"codeListing","code":["let welcoming = ParsePrint {","  \"Hello \"","  Prefix { $0 != \"!\" }.map(String.init)","  \"!\"","}"],"syntax":"swift"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"Generic struct "},{"type":"codeVoice","code":"ParsePrint"},{"type":"text","text":" requires that "},{"type":"codeVoice","code":"Parsers.Map<Prefix<Substring>, String>"},{"type":"text","text":" conform"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"ParserPrinter"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"code":"ParsePrint","type":"codeVoice"},{"text":" is a type alias for the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","type":"reference"},{"text":" parser with its underlying parser constrained to","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},{"text":".","type":"text"}]}]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"]}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"}],"navigatorTitle":[{"text":"ParsePrint","kind":"identifier"}],"symbolKind":"struct","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10ParsePrintV","roleHeading":"Structure","title":"ParsePrint"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parseprint"]}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"An entry to "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"reference","isActive":true},{"type":"text","text":" syntax that requires the builder to be a printer."}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(with:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parserPrinters"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations"],"generated":true}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/Parser-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","kind":"article","role":"collectionGroup","type":"topic","title":"Parser Implementations","url":"\/documentation\/parsing\/parseprint\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/parserPrinters":{"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parserPrinters","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parserPrinters"},{"text":": ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"}],"title":"parserPrinters","abstract":[],"url":"\/documentation\/parsing\/parseprint\/parserprinters"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/print(_:into:)":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"print(_:into:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/print(_:into:)","url":"\/documentation\/parsing\/parseprint\/print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"}],"navigatorTitle":[{"text":"ParsePrint","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parseprint","role":"symbol","title":"ParsePrint","abstract":[{"type":"text","text":"An entry to "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"reference"},{"type":"text","text":" syntax that requires the builder to be a printer."}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","url":"\/documentation\/parsing\/parseprint\/parserprinter-implementations","type":"topic","role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"title":"ParserBuilder"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(_:with:)-8nbrc":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:with:)","url":"\/documentation\/parsing\/parseprint\/init(_:with:)-8nbrc","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","role":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"url":"\/documentation\/parsing\/parserprinter","kind":"symbol","title":"ParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/parse(_:)":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"title":"parse(_:)","url":"\/documentation\/parsing\/parseprint\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(_:with:)-4k2am":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Downstream"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parseprint\/init(_:with:)-4k2am","title":"init(_:with:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(with:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(with:)","url":"\/documentation\/parsing\/parseprint\/init(with:)","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(with:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"role":"symbol","url":"\/documentation\/parsing\/parse","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"title":"Parse"}}}