{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This parser-printer forwards its ","type":"text"},{"type":"codeVoice","code":"parse(_:)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"print(_:to:)"},{"text":" methods to an arbitrary","type":"text"},{"text":" ","type":"text"},{"text":"underlying parser-printer having the same ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types, hiding the specifics of"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"code":"AnyParserPrinter","type":"codeVoice"},{"type":"text","text":" to wrap a parser whose type has details you don’t want to expose across"},{"type":"text","text":" "},{"type":"text","text":"API boundaries, such as different modules. When you use type erasure this way, you can change"},{"type":"text","text":" "},{"type":"text","text":"the underlying parser over time without affecting existing clients."}]}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"roleHeading":"Structure","title":"AnyParserPrinter","externalID":"s:7Parsing16AnyParserPrinterV","role":"symbol","modules":[{"name":"Parsing"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations"],"generated":true}],"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyparserprinter"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","role":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"url":"\/documentation\/parsing\/parserprinter","kind":"symbol","title":"ParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/init(parse:print:)":{"role":"symbol","abstract":[{"type":"text","text":"Creates a parser-printer that wraps the given closures in its "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","isActive":true},{"type":"text","text":" and"},{"type":"text","text":" "},{"code":"print(_:to:)","type":"codeVoice"},{"type":"text","text":" methods."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"parse"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"print"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/parsing\/anyparserprinter\/init(parse:print:)","title":"init(parse:print:)"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/print(_:into:)":{"url":"\/documentation\/parsing\/anyparserprinter\/print(_:into:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"type":"topic","title":"print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/parse(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"}],"type":"topic","url":"\/documentation\/parsing\/anyparserprinter\/parse(_:)","title":"parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter":{"title":"AnyParserPrinter","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/anyparserprinter","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","type":"topic","abstract":[],"url":"\/documentation\/parsing\/anyparserprinter\/parser-implementations","title":"Parser Implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/ParserPrinter-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations","type":"topic","url":"\/documentation\/parsing\/anyparserprinter\/parserprinter-implementations","title":"ParserPrinter Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/init(_:)":{"title":"init(_:)","abstract":[{"type":"text","text":"Creates a type-erasing parser-printer to wrap the given parser-printer."}],"url":"\/documentation\/parsing\/anyparserprinter\/init(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":")"}],"role":"symbol"}}}