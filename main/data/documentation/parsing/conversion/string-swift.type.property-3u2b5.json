{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Parsing"}],"role":"symbol","symbolKind":"property","title":"string","extendedModule":"Parsing","roleHeading":"Type Property","externalID":"s:7Parsing10ConversionPA2A11ConversionsO17SubstringToStringVRszrlE6stringAGvpZ","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.SubstringToString","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"SubstringToString","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV"}]},"seeAlsoSections":[{"generated":true,"title":"Common conversions","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/memberwise(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/case(_:)-4j2n7","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/json(_:decoder:encoder:)-swift.type.method","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/lossless(_:)-swift.type.method"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier","text":"Conversions"},{"kind":"text","text":"."},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV","kind":"typeIdentifier","text":"SubstringToString"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for transforming a "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","isActive":true,"type":"reference"},{"type":"text","text":"’s substring output into a more general-purpose"},{"type":"text","text":" "},{"type":"text","text":"string."}]},{"type":"codeListing","code":["let line = Prefix { $0 != \"\\n\" }.map(.string)"],"syntax":"swift"}]}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"A conversion from "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversion\/string-swift.type.property-3u2b5"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/SubstringToString":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SubstringToString","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString","navigatorTitle":[{"text":"SubstringToString","kind":"identifier"}],"title":"Conversions.SubstringToString","kind":"symbol","abstract":[{"type":"text","text":"A conversion from a substring to a string."}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/conversions\/substringtostring"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/case(_:)-4j2n7":{"title":"case(_:)","url":"\/documentation\/parsing\/conversion\/case(_:)-4j2n7","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"type":"text","text":" "},{"type":"text","text":"associated values."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/case(_:)-4j2n7","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","role":"collection","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/int-swift.type.property":{"title":"int","type":"topic","abstract":[{"type":"text","text":"A conversion from a "},{"code":"Double","type":"codeVoice"},{"type":"text","text":" to an "},{"code":"Int","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.BinaryFloatingPointToFixedWidthInteger<Double, Int>"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/parsing\/conversion\/int-swift.type.property","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"int"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BinaryFloatingPointToFixedWidthInteger","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/lossless(_:)-swift.type.method":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lossless","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/parsing\/conversion\/lossless(_:)-swift.type.method","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/lossless(_:)-swift.type.method","title":"lossless(_:)","abstract":[{"type":"text","text":"A conversion from a string to a lossless string-convertible type."}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/representing(_:)-swift.type.method":{"title":"representing(_:)","url":"\/documentation\/parsing\/conversion\/representing(_:)-swift.type.method","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"A conversion from a given raw representable type’s raw value to itself."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-3u2b5":{"title":"string","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-3u2b5","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier","text":"Conversions"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV","kind":"typeIdentifier","text":"SubstringToString"}],"abstract":[{"type":"text","text":"A conversion from "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Conversions.SubstringToString","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/memberwise(_:)":{"title":"memberwise(_:)","url":"\/documentation\/parsing\/conversion\/memberwise(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memberwise"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Struct"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Struct"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a"},{"type":"text","text":" "},{"type":"text","text":"memberwise initializer."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/memberwise(_:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","role":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"url":"\/documentation\/parsing\/parserprinter","kind":"symbol","title":"ParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-9owth":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"BytesToString","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO13BytesToStringV"},{"text":"<","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"text":"UTF8View","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-9owth","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.BytesToString<Substring.UTF8View>"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","title":"string","abstract":[{"type":"text","text":"A conversion from "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/double-swift.type.property":{"title":"double","url":"\/documentation\/parsing\/conversion\/double-swift.type.property","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"double"},{"text":": ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"FixedWidthIntegerToBinaryFloatingPoint","preciseIdentifier":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"A conversion from an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Double"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.FixedWidthIntegerToBinaryFloatingPoint<Int, Double>","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"title":"Conversions","navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"type":"topic","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","url":"\/documentation\/parsing\/conversions","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/json(_:decoder:encoder:)-swift.type.method":{"kind":"symbol","role":"symbol","type":"topic","title":"json(_:decoder:encoder:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/json(_:decoder:encoder:)-swift.type.method","abstract":[{"type":"text","text":"A conversion from "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" to the given codable type."}],"url":"\/documentation\/parsing\/conversion\/json(_:decoder:encoder:)-swift.type.method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"json"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"encoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]}}}